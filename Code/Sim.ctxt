#BlueJ class context
comment0.target=Sim
comment0.text=\r\n\ Sim\ is\ an\ event\ driven\ simulation\ that\ simulates\ a\ certain\ number\ of\ cashiers\ that\ service\ customers\ \r\n\ that\ come\ to\ the\ shop\ from\ 06\:00\ -\ 21\:00.\r\n\ \r\n\ The\ customers\ are\ created\ by\ a\ CustomerQueue\ that\ stores\ the\ customers.\r\n\ There\ are\ 3\ complementary\ lists\ that\ receive\ customers\ based\ on\ their\ state.\r\n\ -\ serviceCustomers\ (ArrayList,\ because\ we\ only\ need\ it's\ size)\r\n\ -\ overflownCustomers\ (ArrayList,\ because\ we\ only\ need\ it's\ size)\r\n\ -\ wiatedCustomers\ (LinkedList\ because\ we\ come\ back\ to\ it\ and\ iterate\ over\ it\ to\ get\ data\ like\ avgWaitTime\ and\ MaxWaitTime\r\n\ \r\n\ Cashiers\ are\ also\ in\ a\ linkedList\ because\ iteration\ is\ needed\ to\ check\ availability\r\n\ If\ cashiers\ are\ busy,\ customers'\ events\ are\ labelled\ as\ "waiting',\ if\ the\ size\ hits\ 24,\ \r\n\ customers\ leave\ and\ are\ added\ to\ 'overflown'\ list\r\n\ \r\n\ Events\ are\ stored\ in\ a\ priorityQueue\r\n\ \r\n\ @author\ Shakh\ Saidov\r\n
comment1.params=
comment1.target=Sim()
comment10.params=
comment10.target=void\ setupQ()
comment10.text=\r\n\ Sets\ up\ the\ event\ priorityQueue\ by\ adding\ all\ customers\ as\ they\ "arrive",\ till\ the\ CustomerQueue\ is\ empty\r\n
comment11.params=event
comment11.target=void\ handleEvent(Event)
comment11.text=\r\n\ Handles\ the\ event\ accordingly\r\n\ 1)\ If\ customer\ arrives,\ assign\ it\ to\ cashier\r\n\ 2)\ If\ cashiers\ are\ busy,\ make\ the\ customer\ wait\r\n\ 3)\ If\ the\ waiting\ customers\ are\ \=\ waitLineSizeLimit,\ the\ next\ customer\ is\ overflown\r\n\ 4)\ If\ the\ customer\ has\ been\ serviced,\ makes\ the\ cashier\ available\r\n\ \r\n\ @param\ Event\ event\r\n
comment12.params=
comment12.target=Cashier\ findAvailableCashier()
comment12.text=\r\n\ Finds\ if\ a\ cashier\ is\ available\r\n\ @return\ Cashier\ cashier\ if\ availably,\ null\ otherwise\r\n
comment13.params=
comment13.target=int\ firstFreeCashierTime()
comment13.text=\r\n\ Calculates\ the\ earliest\ time\ a\ cashier\ will\ be\ ready\r\n\ return\ int\ time\r\n
comment14.params=
comment14.target=double\ getTotalProfit()
comment14.text=\r\n\ Gets\ the\ total\ profit\ earned\ by\ serviced\ Customers\r\n\ @return\ double\ profit\r\n
comment15.params=
comment15.target=double\ getCashierPay()
comment15.text=\r\n\ Calculates\ the\ total\ amount\ paid\ for\ cashiers\r\n\ @return\ double\ total\ pay\r\n
comment16.params=
comment16.target=double\ getNetProfit()
comment16.text=\r\n\ Gets\ the\ net\ profit\ earned\ for\ the\ day\r\n\ @return\ double\ net\ profit\r\n
comment17.params=
comment17.target=double\ getAvgWaitTime()
comment17.text=\r\n\ Calculates\ the\ average\ waiting\ time\ of\ customers\ from\ the\ obtained\ list\r\n\ @return\ double\ avg\ wait\ time\r\n
comment18.params=
comment18.target=double\ getMaxWaitTime()
comment18.text=\r\n\ Get\ the\ maximum\ wait\ time\ a\ customer\ had\ to\ wait\ for\ the\ day\r\n\ @return\ double\ max\ wait\ time\r\n
comment2.params=c
comment2.target=void\ addCustomer(Customer)
comment2.text=\r\n\ Adds\ a\ customer\ to\ the\ CustomerQueue\r\n\ @param\ Customer\ c\r\n
comment3.params=c
comment3.target=void\ addCashier(Cashier)
comment3.text=\r\n\ Adds\ a\ cashier\ to\ the\ CashierList\r\n\ Modifies\ the\ waitLineSizeLimit\ (adds\ 8\ per\ each\ cashier)\r\n\ @param\ Cashier\ c\r\n
comment4.params=cW
comment4.target=void\ setCashierWage(double)
comment4.text=\r\n\ Sets\ the\ wage\ of\ cashiers\r\n\ @param\ double\ cW\r\n
comment5.params=
comment5.target=int\ getCashiersNum()
comment5.text=\r\n\ Gets\ the\ number\ of\ cashiers\r\n\ @return\ int\ size\r\n
comment6.params=
comment6.target=int\ getServedCSize()
comment6.text=\r\n\ Gets\ the\ number\ of\ served\ customers\r\n\ @return\ int\ size\r\n
comment7.params=
comment7.target=int\ getOverflownCSize()
comment7.text=\r\n\ Gets\ the\ number\ of\ overflown\ customers\r\n\ @return\ int\ size\r\n
comment8.params=
comment8.target=int\ getWaitedCSize()
comment8.text=\r\n\ Gets\ the\ number\ of\ waited\ customers\r\n\ @return\ int\ size\r\n
comment9.params=
comment9.target=void\ run()
comment9.text=\r\n\ Runs\ the\ simulation,\ with\ all\ the\ data\ added\ (Cashiers\ and\ their\ wage,\ Customers)\r\n
numComments=19
